<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on GoCV - Golang Computer Vision Using OpenCV 3</title>
    <link>https://gocv.io/</link>
    <description>Recent content in Home on GoCV - Golang Computer Vision Using OpenCV 3</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Mar 2018 18:00:37 +0200</lastBuildDate>
    
	<atom:link href="https://gocv.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello Video</title>
      <link>https://gocv.io/writing-code/hello-video/</link>
      <pubDate>Sun, 25 Mar 2018 18:00:37 +0200</pubDate>
      
      <guid>https://gocv.io/writing-code/hello-video/</guid>
      <description>This example opens a video capture device using device &amp;ldquo;0&amp;rdquo;, reads frames, and shows the video in a GUI window:
package main import ( &amp;quot;gocv.io/x/gocv&amp;quot; ) func main() { webcam, _ := gocv.VideoCaptureDevice(0) window := gocv.NewWindow(&amp;quot;Hello&amp;quot;) img := gocv.NewMat() for { webcam.Read(&amp;amp;img) window.IMShow(img) window.WaitKey(1) } }  </description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://gocv.io/getting-started/linux/</link>
      <pubDate>Mon, 09 Oct 2017 11:41:45 +0200</pubDate>
      
      <guid>https://gocv.io/getting-started/linux/</guid>
      <description>This page has information on how to install and use GoCV on Ubuntu, as well as other Linux distros.
You can use make to install OpenCV 4.0.0 with the handy Makefile included with this repo. If you already have installed OpenCV, you do not need to do so again. The installation performed by the Makefile is minimal, so it may remove OpenCV options such as Python or Java wrappers if you have already installed OpenCV some other way.</description>
    </item>
    
    <item>
      <title>OpenCV 4 Support And Custom Profiling</title>
      <link>https://gocv.io/blog/2018-11-28-opencv-4-support-and-custom-profiling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2018-11-28-opencv-4-support-and-custom-profiling/</guid>
      <description>We&amp;rsquo;re proud to announce our latest release of GoCV (https://gocv.io) version 0.18.0. This is a big update, because we are now supporting the long awaited and just-released OpenCV version 4.0.
We also have some great new features from our amazing contributors. Thank you to everyone who has helped with the project getting ready for the release.
You can take a look at the full changelog at https://github.com/hybridgroup/gocv/blob/master/CHANGELOG.md#0180 for the details, or read on to learn more.</description>
    </item>
    
    <item>
      <title>macOS</title>
      <link>https://gocv.io/getting-started/macos/</link>
      <pubDate>Mon, 26 Mar 2018 11:41:50 +0200</pubDate>
      
      <guid>https://gocv.io/getting-started/macos/</guid>
      <description>This page has information on how to install and use GoCV on macOS.
Installing Install the GoCV package:
go get -u -d gocv.io/x/gocv  You can install OpenCV 4.0.0 using Homebrew.
If you already have an earlier version of OpenCV (3.4.x) installed, you should probably remove it before installing the new version:
brew uninstall opencv  You can then install OpenCV 4.0.0:
brew install hybridgroup/tools/opencv  This new Homebrew recipe will install only OpenCV 4.</description>
    </item>
    
    <item>
      <title>Face Detect</title>
      <link>https://gocv.io/writing-code/face-detect/</link>
      <pubDate>Sun, 25 Mar 2018 18:02:15 +0200</pubDate>
      
      <guid>https://gocv.io/writing-code/face-detect/</guid>
      <description>This is a more complete example that opens a video capture device using device &amp;ldquo;0&amp;rdquo;. It also uses the CascadeClassifier class to load an external data file containing the classifier data. The program grabs each frame from the video, then uses the classifier to detect faces. If any faces are found, it draws a green rectangle around each one, then displays the video in an output window:
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;image&amp;quot; &amp;quot;image/color&amp;quot; &amp;quot;os&amp;quot; &amp;quot;strconv&amp;quot; &amp;quot;gocv.</description>
    </item>
    
    <item>
      <title>Windows</title>
      <link>https://gocv.io/getting-started/windows/</link>
      <pubDate>Mon, 09 Oct 2017 11:41:54 +0200</pubDate>
      
      <guid>https://gocv.io/getting-started/windows/</guid>
      <description>This page has information on how to install and use GoCV on Microsoft Windows 10, 64-bit.
Installing Install the GoCV package:
go get -u -d gocv.io/x/gocv  In order to use GoCV on Windows you must build and install OpenCV 4.0.0. First download and install MinGW-W64 and CMake, as follows.
MinGW-W64 Download and run the MinGW-W64 compiler installer from https://sourceforge.net/projects/mingw-w64/?source=typ_redirect.
The latest version of the MinGW-W64 toolchain is 7.3.0, but any version from 7.</description>
    </item>
    
    <item>
      <title>Going Deeper Into DNN For Computer Vision</title>
      <link>https://gocv.io/blog/2018-07-05-going-deeper-into-dnn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2018-07-05-going-deeper-into-dnn/</guid>
      <description>We have just released GoCV (https://gocv.io) version 0.14.0, our Go programming language package for computer vision using OpenCV. Thanks to the efforts of our contributors and team this is one of our most significant updates yet.
This new GoCV version has been timed to land in parallel with the just shipped OpenCV 3.4.2 release, which features some substantial new functionality for using Deep Neural Networks (DNN) for computer vision. The new GoCV also supports the Intel OpenVINO Inference Engine for DNN hardware acceleration on CPU&amp;rsquo;s, GPU&amp;rsquo;s, and VPU&amp;rsquo;s too.</description>
    </item>
    
    <item>
      <title>This One Goes to 0.11</title>
      <link>https://gocv.io/blog/2018-03-26-this-one-goes-to-0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2018-03-26-this-one-goes-to-0.11/</guid>
      <description>It is with great pleasure that we release to you our latest GoCV (https://gocv.io) version 0.11.0. This is an important update, because it slightly changes the API from previous versions. By this we mean breaking changes, which we will explain below.
We of course have lots of new functionality and features, as always largely due to our amazing contributors. Thank you to everyone who has added code, documentation, or feedback to the project in preparation for this release.</description>
    </item>
    
    <item>
      <title>Go, OpenCV, Caffe, and Tensorflow: Putting It All Together With GoCV</title>
      <link>https://gocv.io/blog/2018-01-23-go-opencv-tensorflow-caffe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2018-01-23-go-opencv-tensorflow-caffe/</guid>
      <description>We are pleased to present to you the new GoCV (https://gocv.io) version 0.8.0, which is our first release of 2018. This is a big update and adds a lot of powerful new functionality, along with bug fixes and more documentation, thanks to our wonderful contributors.
The new version adds support for the OpenCV Deep Neural Network (DNN) module, which means you can now use Caffe (http://caffe.berkeleyvision.org/) and Tensorflow (https://www.tensorflow.org/) models from your GoCV code.</description>
    </item>
    
    <item>
      <title>Putting Eyes on the IoT - The Video</title>
      <link>https://gocv.io/blog/2017-12-14-putting-eyes-on-the-iot-video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2017-12-14-putting-eyes-on-the-iot-video/</guid>
      <description>The video from &amp;ldquo;Putting Eyes on the IoT: Advanced Computer Vision Using Golang&amp;rdquo;, the talk about GoCV during the Intel Global IoT Devfest, has just been posted online.
Check it at at:
https://www.youtube.com/watch?v=eR8T8rvlNuk
Even if you are a newcomer to Go programming or computer vision, the talk is intended so you can get something useful out of it.
Also, provides useful information about not just OpenCV but also the Intel Computer Vision SDK, which has not had a lot of tutorial content yet overall, let along in Golang.</description>
    </item>
    
    <item>
      <title>Introducing the GoCV Blog</title>
      <link>https://gocv.io/blog/2017-12-14-gocv-the-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocv.io/blog/2017-12-14-gocv-the-blog/</guid>
      <description>Perhaps you have been wondering &amp;ldquo;where is the blog for this project?&amp;rdquo;. Well, wonder no more, here it is!
We have a Twitter account too We also now have an &amp;ldquo;official&amp;rdquo; Twitter account at @GoCVio please follow us.
What we will cover Updates to GoCV or to OpenCV itself, cool things built with GoCV, events we attend, and the like.
We want to hear from you! Are you using GoCV for something?</description>
    </item>
    
    <item>
      <title>More Examples</title>
      <link>https://gocv.io/writing-code/more-examples/</link>
      <pubDate>Sun, 25 Mar 2018 18:04:54 +0200</pubDate>
      
      <guid>https://gocv.io/writing-code/more-examples/</guid>
      <description>GoCV comes with various useful command line utilities, that are also examples of how to use the package.
Caffe Classifier Capture video from a connected webcam, then use the Caffe deep learning framework to classify whatever is in front of the camera.
https://github.com/hybridgroup/gocv/blob/master/cmd/caffe-classifier/main.go
Captest Tests to verify you can capture video from a connected webcam.
https://github.com/hybridgroup/gocv/blob/master/cmd/captest/main.go
Capwindow Capture video from a connected webcam and display the video in a Window.</description>
    </item>
    
  </channel>
</rss>